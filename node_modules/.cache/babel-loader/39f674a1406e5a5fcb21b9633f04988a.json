{"ast":null,"code":"var _jsxFileName = \"/Users/daisymilan/Desktop/repo/React Projects/goit-react-hw-03-phonebook/src/components/App.jsx\";\nimport { Component } from 'react';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }]\n    };\n    this.addContact = newContact => {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContact]\n      }));\n    };\n    this.deleteContact = id => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      }));\n    };\n  }\n  // componentDidMount() invoked after a component has been rendered to the DOM\n  // implement this code\n  componentDidMount() {\n    // If 'contacts' key in LS is not null, we write it in the 'contacts' state\n    const savedContacts = localStorage.getItem('contacts');\n    if (savedContacts !== null) {\n      this.setState({\n        contacts: JSON.parse(savedContacts)\n      });\n    } else {\n      this.setState({\n        contacts: [{\n          id: 'id-1',\n          name: 'Rosie Simpson',\n          number: '459-12-56'\n        }, {\n          id: 'id-2',\n          name: 'Hermione Kline',\n          number: '443-89-12'\n        }, {\n          id: 'id-3',\n          name: 'Eden Clements',\n          number: '645-17-79'\n        }, {\n          id: 'id-4',\n          name: 'Annie Copeland',\n          number: '227-91-26'\n        }]\n      });\n    }\n    console.log('componentDidMount()');\n  }\n\n  // componentDidUpdate() after a component is updated\n  // implement this code\n  componentDidUpdate(_prevProps, prevState) {\n    // if 'contacts' state is updated, set value to localStorage\n    const {\n      contacts\n    } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n    console.log('componentDidUpdate()');\n  }\n  render() {\n    console.log('render()');\n    const {\n      contacts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        addContact: this.addContact,\n        contacts: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: contacts,\n        deleteContact: this.deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\ncomponent mounted?\n       \\\ninitial render()\n       \\\ncomponentDidMount()\n  \n\nprops/states are changed?/forceUpdate()\n       \\\nre - render()\n\n\ncomponent WILL remove/unmount?\n        \\\ncomponentWillUnmount()\n\n\ncomponent updated?\n        | \ncomponentDidUpdate()\n*/","map":{"version":3,"names":["Component","ContactForm","ContactList","jsxDEV","_jsxDEV","App","constructor","arguments","state","contacts","id","name","number","addContact","newContact","setState","prevState","deleteContact","filter","contact","componentDidMount","savedContacts","localStorage","getItem","JSON","parse","console","log","componentDidUpdate","_prevProps","setItem","stringify","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/daisymilan/Desktop/repo/React Projects/goit-react-hw-03-phonebook/src/components/App.jsx"],"sourcesContent":["import { Component } from 'react';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n  };\n\n  // componentDidMount() invoked after a component has been rendered to the DOM\n  // implement this code\n  componentDidMount() {\n    // If 'contacts' key in LS is not null, we write it in the 'contacts' state\n    const savedContacts = localStorage.getItem('contacts');\n\n    if (savedContacts !== null) {\n      this.setState({ contacts: JSON.parse(savedContacts) });\n    }\n\n    else {\n      this.setState({\n        contacts: [\n          { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n          { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n          { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n          { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n      });\n    }\n\n    console.log('componentDidMount()');\n  }\n\n  // componentDidUpdate() after a component is updated\n  // implement this code\n  componentDidUpdate(_prevProps, prevState) {\n    // if 'contacts' state is updated, set value to localStorage\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n\n    console.log('componentDidUpdate()');\n  }\n\n  addContact = newContact => {\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    console.log('render()');\n    const { contacts } = this.state;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} contacts={contacts} />\n\n        <h2>Contacts</h2>\n        <ContactList contacts={contacts} deleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\n/*\ncomponent mounted?\n       \\\ninitial render()\n       \\\ncomponentDidMount()\n  \n\nprops/states are changed?/forceUpdate()\n       \\\nre - render()\n\n\ncomponent WILL remove/unmount?\n        \\\ncomponentWillUnmount()\n\n\ncomponent updated?\n        | \ncomponentDidUpdate()\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}