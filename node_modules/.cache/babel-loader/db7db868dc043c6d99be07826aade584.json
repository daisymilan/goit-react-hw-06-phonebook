{"ast":null,"code":"var _jsxFileName = \"/Users/daisymilan/Desktop/repo/React Projects/goit-react-hw-04-phonebook/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [contacts, setContacts] = useState([{\n    id: 'id-1',\n    name: 'Rosie Simpson',\n    number: '459-12-56'\n  }, {\n    id: 'id-2',\n    name: 'Hermione Kline',\n    number: '443-89-12'\n  }, {\n    id: 'id-3',\n    name: 'Eden Clements',\n    number: '645-17-79'\n  }, {\n    id: 'id-4',\n    name: 'Annie Copeland',\n    number: '227-91-26'\n  }]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    const savedContacts = localStorage.getItem('contacts');\n    if (savedContacts) {\n      setContacts(JSON.parse(savedContacts));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n  const addContact = newContact => {\n    const duplicateContact = contacts.find(contact => contact.name === newContact.name);\n    if (duplicateContact) {\n      alert(`${newContact.name} is already in your contacts.`);\n      return;\n    }\n    setContacts(prevContacts => [...prevContacts, newContact]);\n  };\n  const deleteContact = id => {\n    setContacts(prevContacts => prevContacts.filter(contact => contact.id !== id));\n  };\n  const filterContact = () => {\n    const filterLowerCase = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filterLowerCase));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      addContact: addContact,\n      contacts: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      filterContact: filterContact,\n      deleteContact: deleteContact,\n      contacts: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zedR6j/R5LmB/xzxRi6ha6H80Z8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","Filter","ContactList","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","id","name","number","filter","setFilter","savedContacts","localStorage","getItem","JSON","parse","setItem","stringify","addContact","newContact","duplicateContact","find","contact","alert","prevContacts","deleteContact","filterContact","filterLowerCase","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daisymilan/Desktop/repo/React Projects/goit-react-hw-04-phonebook/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const savedContacts = localStorage.getItem('contacts');\n    if (savedContacts) {\n      setContacts(JSON.parse(savedContacts));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = newContact => {\n    const duplicateContact = contacts.find(\n      contact => contact.name === newContact.name\n    );\n\n    if (duplicateContact) {\n      alert(`${newContact.name} is already in your contacts.`);\n      return;\n    }\n\n    setContacts(prevContacts => [...prevContacts, newContact]);\n  };\n\n  const deleteContact = id => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== id)\n    );\n  };\n\n  const filterContact = () => {\n    const filterLowerCase = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterLowerCase)\n    );\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm addContact={addContact} contacts={contacts} />\n\n      <h2>Contacts</h2>\n      <Filter filter={filter} setFilter={setFilter} />\n      <ContactList\n        filterContact={filterContact}\n        deleteContact={deleteContact}\n        contacts={contacts}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CACvC;IAAEW,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,eAAe;IAAEC,MAAM,EAAE;EAAY,CAAC,EAC1D;IAAEF,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE;EAAY,CAAC,EAC3D;IAAEF,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,eAAe;IAAEC,MAAM,EAAE;EAAY,CAAC,EAC1D;IAAEF,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE;EAAY,CAAC,CAC5D,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIF,aAAa,EAAE;MACjBN,WAAW,CAACS,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACdgB,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAACb,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMc,UAAU,GAAGC,UAAU,IAAI;IAC/B,MAAMC,gBAAgB,GAAGhB,QAAQ,CAACiB,IAAI,CACpCC,OAAO,IAAIA,OAAO,CAACf,IAAI,KAAKY,UAAU,CAACZ,IACzC,CAAC;IAED,IAAIa,gBAAgB,EAAE;MACpBG,KAAK,CAAE,GAAEJ,UAAU,CAACZ,IAAK,+BAA8B,CAAC;MACxD;IACF;IAEAF,WAAW,CAACmB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEL,UAAU,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMM,aAAa,GAAGnB,EAAE,IAAI;IAC1BD,WAAW,CAACmB,YAAY,IACtBA,YAAY,CAACf,MAAM,CAACa,OAAO,IAAIA,OAAO,CAAChB,EAAE,KAAKA,EAAE,CAClD,CAAC;EACH,CAAC;EAED,MAAMoB,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,eAAe,GAAGlB,MAAM,CAACmB,WAAW,CAAC,CAAC;IAC5C,OAAOxB,QAAQ,CAACK,MAAM,CAACa,OAAO,IAC5BA,OAAO,CAACf,IAAI,CAACqB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,eAAe,CACrD,CAAC;EACH,CAAC;EAED,oBACE1B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjC,OAAA,CAACJ,WAAW;MAACqB,UAAU,EAAEA,UAAW;MAACd,QAAQ,EAAEA;IAAS;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3DjC,OAAA;MAAA6B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBjC,OAAA,CAACH,MAAM;MAACW,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDjC,OAAA,CAACF,WAAW;MACV2B,aAAa,EAAEA,aAAc;MAC7BD,aAAa,EAAEA,aAAc;MAC7BrB,QAAQ,EAAEA;IAAS;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA5DID,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA8DT,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}