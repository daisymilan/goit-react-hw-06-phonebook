{"ast":null,"code":"var _jsxFileName = \"/Users/daisymilan/Desktop/repo/React Projects/goit-react-hw-03-phonebook/src/components/ContactForm/ContactForm.jsx\";\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n    this.handleNameChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n    this.handleNumberChange = e => {\n      this.setState({\n        number: e.target.value\n      });\n    };\n    this.handleSubmit = e => {\n      // prevent the form from refreshing when submitted\n      e.preventDefault();\n      const {\n        name,\n        number\n      } = this.state;\n      const {\n        addContact,\n        contacts\n      } = this.props;\n\n      // if name and number is empty, it will not submit(return)\n      if (name.trim() === '' || number.trim() === '') {\n        return;\n      }\n\n      // if existing contact set an alert, it will not submit(return)\n      const existingContact = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n      if (existingContact) {\n        alert(`${name} is already in contacts`);\n        return;\n      }\n\n      // Add Contact\n      addContact({\n        id: nanoid(),\n        name: name.trim(),\n        number: number.trim()\n      });\n\n      // Reset Form Fields upon submitting\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n          // add \\ before - in [' \\-] to make it work (LMS)\n          ,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' \\\\-][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\",\n          required: true\n          //must have value prop when onChange prop is used\n          ,\n          value: name,\n          onChange: this.handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\"\n          // add \\ before - in [\\-.\\s] to make it work (LMS)\n          ,\n          pattern: \"\\\\+?\\\\d{1,4}?[\\\\-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true\n          //must have value prop when onChange prop is used\n          ,\n          value: number,\n          onChange: this.handleNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["Component","nanoid","jsxDEV","_jsxDEV","ContactForm","constructor","arguments","state","name","number","handleNameChange","e","setState","target","value","handleNumberChange","handleSubmit","preventDefault","addContact","contacts","props","trim","existingContact","find","contact","toLowerCase","alert","id","render","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","pattern","title","required","onChange"],"sources":["/Users/daisymilan/Desktop/repo/React Projects/goit-react-hw-03-phonebook/src/components/ContactForm/ContactForm.jsx"],"sourcesContent":["import { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nexport class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleNameChange = e => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n\n  handleNumberChange = e => {\n    this.setState({\n      number: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    // prevent the form from refreshing when submitted\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { addContact, contacts } = this.props;\n\n    // if name and number is empty, it will not submit(return)\n    if (name.trim() === '' || number.trim() === '') {\n      return;\n    }\n\n    // if existing contact set an alert, it will not submit(return)\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (existingContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    // Add Contact\n    addContact({\n      id: nanoid(),\n      name: name.trim(),\n      number: number.trim(),\n    });\n\n    // Reset Form Fields upon submitting\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            // add \\ before - in [' \\-] to make it work (LMS)\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n            required\n            //must have value prop when onChange prop is used\n            value={name}\n            onChange={this.handleNameChange}\n          />\n        </label>\n\n        <label>\n          <p>Number</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            // add \\ before - in [\\-.\\s] to make it work (LMS)\n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            //must have value prop when onChange prop is used\n            value={number}\n            onChange={this.handleNumberChange}\n          />\n        </label>\n\n        <button type=\"submit\">Add Contact</button>\n      </form>\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,OAAO,MAAMC,WAAW,SAASJ,SAAS,CAAC;EAAAK,YAAA;IAAA,SAAAC,SAAA;IAAA,KACzCC,KAAK,GAAG;MACNC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE;IACV,CAAC;IAAA,KAEDC,gBAAgB,GAAGC,CAAC,IAAI;MACtB,IAAI,CAACC,QAAQ,CAAC;QACZJ,IAAI,EAAEG,CAAC,CAACE,MAAM,CAACC;MACjB,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDC,kBAAkB,GAAGJ,CAAC,IAAI;MACxB,IAAI,CAACC,QAAQ,CAAC;QACZH,MAAM,EAAEE,CAAC,CAACE,MAAM,CAACC;MACnB,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDE,YAAY,GAAGL,CAAC,IAAI;MAClB;MACAA,CAAC,CAACM,cAAc,CAAC,CAAC;MAClB,MAAM;QAAET,IAAI;QAAEC;MAAO,CAAC,GAAG,IAAI,CAACF,KAAK;MACnC,MAAM;QAAEW,UAAU;QAAEC;MAAS,CAAC,GAAG,IAAI,CAACC,KAAK;;MAE3C;MACA,IAAIZ,IAAI,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIZ,MAAM,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAC9C;MACF;;MAEA;MACA,MAAMC,eAAe,GAAGH,QAAQ,CAACI,IAAI,CACnCC,OAAO,IAAIA,OAAO,CAAChB,IAAI,CAACiB,WAAW,CAAC,CAAC,KAAKjB,IAAI,CAACiB,WAAW,CAAC,CAC7D,CAAC;MAED,IAAIH,eAAe,EAAE;QACnBI,KAAK,CAAE,GAAElB,IAAK,yBAAwB,CAAC;QACvC;MACF;;MAEA;MACAU,UAAU,CAAC;QACTS,EAAE,EAAE1B,MAAM,CAAC,CAAC;QACZO,IAAI,EAAEA,IAAI,CAACa,IAAI,CAAC,CAAC;QACjBZ,MAAM,EAAEA,MAAM,CAACY,IAAI,CAAC;MACtB,CAAC,CAAC;;MAEF;MACA,IAAI,CAACT,QAAQ,CAAC;QACZJ,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC;EAAA;EAEDmB,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEpB,IAAI;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACF,KAAK;IAEnC,oBACEJ,OAAA;MAAM0B,QAAQ,EAAE,IAAI,CAACb,YAAa;MAAAc,QAAA,gBAChC3B,OAAA;QAAA2B,QAAA,gBACE3B,OAAA;UAAA2B,QAAA,EAAG;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACX/B,OAAA;UACEgC,IAAI,EAAC,MAAM;UACX3B,IAAI,EAAC;UACL;UAAA;UACA4B,OAAO,EAAC,0HAA6D;UACrEC,KAAK,EAAC,yIAAyI;UAC/IC,QAAQ;UACR;UAAA;UACAxB,KAAK,EAAEN,IAAK;UACZ+B,QAAQ,EAAE,IAAI,CAAC7B;QAAiB;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER/B,OAAA;QAAA2B,QAAA,gBACE3B,OAAA;UAAA2B,QAAA,EAAG;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACb/B,OAAA;UACEgC,IAAI,EAAC,KAAK;UACV3B,IAAI,EAAC;UACL;UAAA;UACA4B,OAAO,EAAC,gGAAgF;UACxFC,KAAK,EAAC,8FAA8F;UACpGC,QAAQ;UACR;UAAA;UACAxB,KAAK,EAAEL,MAAO;UACd8B,QAAQ,EAAE,IAAI,CAACxB;QAAmB;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER/B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAEX;AACF"},"metadata":{},"sourceType":"module"}