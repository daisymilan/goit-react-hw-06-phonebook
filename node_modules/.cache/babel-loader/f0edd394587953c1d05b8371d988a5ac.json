{"ast":null,"code":"var _jsxFileName = \"/Users/daisymilan/Desktop/repo/React Projects/goit-react-hw-04-phonebook/src/components/ContactForm/ContactForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = _ref => {\n  _s();\n  let {\n    addContact,\n    contacts\n  } = _ref;\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.trim() === '' || number.trim() === '') {\n      return;\n    }\n    const existingContact = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n    if (existingContact) {\n      Notify.failure(`${name} is already in your contacts!`, {\n        position: 'center-top'\n      });\n      return;\n    } else {\n      Notify.success(`${name} is successfully added to your contacts!`, {\n        position: 'center-top'\n      });\n    }\n    addContact({\n      id: nanoid(),\n      name: name.trim(),\n      number: number.trim()\n    });\n    setName('');\n    setNumber('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: css.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: css.formField,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.formLabel,\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' \\\\-][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\",\n        required: true,\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: css.formField,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.formLabel,\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[\\\\-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        value: number,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: css.btnSubmit,\n      type: \"submit\",\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"mgYk2feJE7Nd8w88JvjzPww6GtA=\");\n_c = ContactForm;\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n  }))\n};\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","nanoid","css","PropTypes","Notify","jsxDEV","_jsxDEV","ContactForm","_ref","_s","addContact","contacts","name","setName","number","setNumber","handleNameChange","e","target","value","handleNumberChange","handleSubmit","preventDefault","trim","existingContact","find","contact","toLowerCase","failure","position","success","id","className","form","onSubmit","children","formField","formLabel","fileName","_jsxFileName","lineNumber","columnNumber","type","pattern","title","required","onChange","btnSubmit","_c","propTypes","func","isRequired","arrayOf","shape","string","$RefreshReg$"],"sources":["/Users/daisymilan/Desktop/repo/React Projects/goit-react-hw-04-phonebook/src/components/ContactForm/ContactForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst ContactForm = ({ addContact, contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name.trim() === '' || number.trim() === '') {\n      return;\n    }\n\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (existingContact) {\n      Notify.failure(`${name} is already in your contacts!`, {\n        position: 'center-top',\n      });\n      return;\n    } else {\n      Notify.success(`${name} is successfully added to your contacts!`, {\n        position: 'center-top',\n      });\n    }\n\n    addContact({\n      id: nanoid(),\n      name: name.trim(),\n      number: number.trim(),\n    });\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formField}>\n        <p className={css.formLabel}>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n          required\n          value={name}\n          onChange={handleNameChange}\n        />\n      </label>\n\n      <label className={css.formField}>\n        <p className={css.formLabel}>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleNumberChange}\n        />\n      </label>\n      <button className={css.btnSubmit} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}